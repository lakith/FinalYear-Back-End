# ===============================
# = DATA SOURCE
# ===============================
spring.application.name = NdbApplication

# Set here configurations for the database connection

# Connection url for the database "NDB"
spring.main.banner-mode=off
spring.datasource.url = jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME}?useSSL=false
spring.datasource.dbcp2.validation-query=SELECT 1
spring.datasource.dbcp2.test-on-borrow=true
spring.jpa.properties.hibername.cache.use_second_level_cache: false
spring.jpa.properties.hibername.cache.use_query_cache: false
spring.jpa.properties.hibername.generate_statistics: false


# Username and password
spring.datasource.username=${DB_USER_NAME}
spring.datasource.password=${DB_PASSWORD}
server.port=8080
## Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1
spring.jackson.serialization.fail-on-empty-beans=false
#spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

# ===============================
# = MULTIPART PROPERTIES
# ===============================

# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

server.servlet.context-path=/api/invitation
## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=./File Storage

#logging.level.root= WARN
#logging.level.org.springframework.security= DEBUG
#logging.level.org.springframework.web= ERROR
#logging.level.org.hibernate= DEBUG
#logging.level.org.apache.commons.dbcp2= DEBUG
#logging.pattern.file= %d{yyyy-MMM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{15} - %msg%n
#logging.pattern.console= %d{yyyy-MMM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{15} - %msg%n
logging.path=application.log

#amazonProperties.endpointUrl = https://s3.us-east-2.amazonaws.com
#amazonProperties.accessKey = AKIAIEYXDYB53RO6ZQXA
#amazonProperties.secretKey = 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
#amazonProperties.bucketName = final-proj-bucket


#amazonProperties.endpointUrl = https://bucketname.s3.amazonaws.com
#amazonProperties.accessKey = AKIAIOTXGIKPDAW3XKLA
#amazonProperties.secretKey = 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
#amazonProperties.bucketName = govi-test-bucket


##
## for aws s3
##
jsa.aws.access_key_id=AKIAIOTXGIKPDAW3XKLA
jsa.aws.secret_access_key=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
jsa.s3.bucket=govi-test-bucket
jsa.s3.region=us-east-1


jwt.loginurl=/users/login
jwt.requrl=/users/login
jwt.header=Authorization
jwt.prefix=Bearer
jwt.expiration=28800

encrypted.property=ENC(uTSqb9grs1+vUv3iN8lItC0kl65lMG+8)

#for email service
#spring.mail.host=smtp.gmail.com
#spring.mail.port=587
#spring.mail.username=munasinghetd@gmail.com
#spring.mail.password=d@n@1993
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.starttls.enable=true